// <auto-generated />
using System;
using AspAssignment.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AspAssignment.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200314082020_Commenttable")]
    partial class Commenttable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspAssignment.Models.Comment", b =>
                {
                    b.Property<int>("Comment_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Post_Id")
                        .HasColumnType("int");

                    b.Property<int?>("PostsPost_Id")
                        .HasColumnType("int");

                    b.Property<string>("comments")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Comment_Id");

                    b.HasIndex("PostsPost_Id");

                    b.ToTable("comments");

                    b.HasData(
                        new
                        {
                            Comment_Id = 1,
                            Post_Id = 1,
                            comments = "Reply To Your first Post"
                        },
                        new
                        {
                            Comment_Id = 2,
                            Post_Id = 2,
                            comments = "Reply To Your second Post"
                        },
                        new
                        {
                            Comment_Id = 3,
                            Post_Id = 1,
                            comments = "Reply To Your first Post but second time"
                        },
                        new
                        {
                            Comment_Id = 4,
                            Post_Id = 3,
                            comments = "Reply To Your third Post"
                        },
                        new
                        {
                            Comment_Id = 5,
                            Post_Id = 3,
                            comments = "Reply To Your third Post but second time"
                        },
                        new
                        {
                            Comment_Id = 6,
                            Post_Id = 2,
                            comments = "Reply To the Post"
                        });
                });

            modelBuilder.Entity("AspAssignment.Models.Posts", b =>
                {
                    b.Property<int>("Post_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Comments")
                        .HasColumnType("int");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("Post")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userID")
                        .HasColumnType("int");

                    b.HasKey("Post_Id");

                    b.HasIndex("userID");

                    b.ToTable("Post");

                    b.HasData(
                        new
                        {
                            Post_Id = 1,
                            Comments = 6,
                            Likes = 0,
                            Post = "This Is My First Post...Thankyou",
                            UserName = "jha@06"
                        },
                        new
                        {
                            Post_Id = 2,
                            Comments = 8,
                            Likes = 0,
                            Post = "This Is Shusnavi's First Post...Thankyou",
                            UserName = "shus@16"
                        },
                        new
                        {
                            Post_Id = 3,
                            Comments = 5,
                            Likes = 0,
                            Post = "Thankyou For Reading My First Post",
                            UserName = "sweta@26"
                        });
                });

            modelBuilder.Entity("AspAssignment.Models.User", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            userID = 1,
                            UserName = "jha@06"
                        },
                        new
                        {
                            userID = 2,
                            UserName = "shus@16"
                        },
                        new
                        {
                            userID = 3,
                            UserName = "sweta@26"
                        });
                });

            modelBuilder.Entity("AspAssignment.Models.Comment", b =>
                {
                    b.HasOne("AspAssignment.Models.Posts", "Posts")
                        .WithMany()
                        .HasForeignKey("PostsPost_Id");
                });

            modelBuilder.Entity("AspAssignment.Models.Posts", b =>
                {
                    b.HasOne("AspAssignment.Models.User", "User")
                        .WithMany("post")
                        .HasForeignKey("userID");
                });
#pragma warning restore 612, 618
        }
    }
}
